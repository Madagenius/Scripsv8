local qw = modules.game_bot.contentsPanel.config
macro(500, function()
qw:setText("Dagger Wright")
qw:setColor("pink")
qw:setFont("verdana-11px-rounded")
schedule(600, function()
  qw:setColor("red")
end)
schedule(800, function()
  qw:setColor("yellow")
end)
schedule(1200, function()
  qw:setColor("orange")
end)
schedule(1400, function()
  qw:setColor("#00FFFF")
end)
end)

local Etiqueta = UI.Label ("PALADIN")
Etiqueta:setColor ("yellow")

local healingSpell = 'Exura gran'
local hpPercent = 90
macro(50, "Exura gran",  function()
  if (hppercent() <= hpPercent) then
    say(healingSpell) 
  end
end)

local healingSpell = 'Exura vita'
local hpPercent = 50
macro(50, "Exura vita",  function()
  if (hppercent() <= hpPercent) then
    say(healingSpell) 
  end
end)

macro(400, "Exevo Gran Mas Frigo", function()
  if g_game.isAttacking() then
    say("exevo gran mas frigo")
  end
end)

macro(400, "Exevo Gran Mas Mort", function()
  if g_game.isAttacking() then
    say("exevo gran mas mort")
  end
end)


macro(400, "Exevo Gran Mas Ice", function()
  if g_game.isAttacking() then
    say("exevo gran mas ice")
  end
end)

macro(400, "Exevo Priest Mas Frigo", function()
  if g_game.isAttacking() then
    say("exevo priest mas frigo")
  end
end)


macro(200, "Open Main BP", function()
  containers = getContainers()
  if #containers < 1 and containers[0] == nil then
    openFromEmpty()
    return
  end
end)

macro(250, "Dance", "Ctrl+D", function()

    turn(math.random(0, 4)) -- turn to a random direction.

 end, warTab)

macro(100, "Time-ring if haste", function()
  local ring = getFinger()
  if ring then
    if hasHaste() and ring:getId() ~= 3053 then
      if findItem(3053) then
        g_game.move(findItem(3053), {x=65535, y=SlotFinger, z=0}, 1)
      end
    elseif not hasHaste() and ring:getId() == 3090 then
      g_game.move(ring, {x=65535, y=SlotBack, z=0}, 1)
    end
  else
    if hasHaste() then
      if findItem(3053) then
        g_game.move(findItem(3053), {x=65535, y=SlotFinger, z=0}, 1)
      end
    end
  end
end)




local monsterList = {}
local whitelistMonsters = {"emberwing", "skullfrost", "groovebeast", "thundergiant"}
macro(100, "Atk Closest Target", function()
 if g_game.isAttacking() then
  return
 end
 for _,mob in ipairs(getSpectators(posz())) do
  if mob:isMonster() and not table.find(whitelistMonsters, mob:getName():lower()) then
   table.insert(monsterList, {monster = mob, distance = getDistanceBetween(pos(), mob:getPosition())})
  end
 end
 table.sort(monsterList, function(a,b) return a.distance < b.distance end)
 if not g_game.isAttacking() and monsterList[1] then
  g_game.attack(monsterList[1].monster)
 end
 monsterList = {}
end)

macro(10, "Follow target", function()
  if g_game.isAttacking() then
    return autoWalk(g_game.getAttackingCreature():getPosition(), 10, {ignoreNonPathable=true, precision=1})
  end
end)

local oldTarget
macro(100, "Hold Target", function()
  if g_game.isAttacking() then
    oldTarget = g_game.getAttackingCreature()
  end
  if oldTarget and oldTarget:getPosition() then
    if not g_game.isAttacking() and getDistanceBetween(pos(), oldTarget:getPosition()) <= 8 then
      if oldTarget:getPosition().z == posz() then
        g_game.attack(oldTarget)
      end
    end
  end
end)

macro(400, "Sd ", function()
    if g_game.isAttacking() then
        usewith(3155, g_game.getAttackingCreature())
        delay(900)
    end
end)

local comboTab = addTab("Combo")

local comboOptions = {
  leader = storage.gpSpellComboLeader or "",
  trigger = storage.gpSpellComboTrigger or "",
  spell = storage.gpSpellComboSpell or "exevo gran mas vis",
}

addLabel("leaderLabel", "Leader Player Name: ", comboTab)
addTextEdit("leaderValue", comboOptions.leader, function(widget, text)
  comboOptions.leader = text
  storage.gpSpellComboLeader = text
end, comboTab)

addLabel("triggerLabel", "Trigger Text: ", comboTab)
addTextEdit("triggerValue", comboOptions.trigger, function(widget, text)
  comboOptions.trigger = text
  storage.gpSpellComboTrigger = text
end, comboTab)

addLabel("spellLabel", "Spell Combo:", comboTab)
addTextEdit("spellValue", comboOptions.spell, function(widget, text)
  comboOptions.spell = text
  storage.gpSpellComboSpell = text
end, comboTab)

onTalk(function(name, level, mode, text, channelId, pos)
  if not comboOptions.trigger then
    return
  end

  if name and name:lower() == comboOptions.leader:lower() then
    if text == comboOptions.trigger then
      say(comboOptions.spell)
    end
  end
end)


local c = {
    pickUp = {11686,3043,11455,10028,11687,11690,11691,3423,3035,11693,3320,238,7642,11698,16096,3386,8092,828,9302,3082,827,814,817,818,821,830,821,10339,10289,10388,9392,3157,3186}, -- list to pickup, separated by a comma.
    CheckPOS = 1 -- The SQM from your character to check if theres an item.
}
macro(20, "Free Items", "", function()
    for x = -c.CheckPOS, c.CheckPOS do
        for y = -c.CheckPOS, c.CheckPOS do
            local tile = g_map.getTile({x = posx() + x, y = posy() + y, z = posz()})
            if tile then
                local things = tile:getThings()
                for _, item in pairs(things) do
                    if table.find(c.pickUp, item:getId()) then
                        local containers = getContainers()
                        for _, container in pairs(containers) do
                            g_game.move(item, container:getSlotPosition(container:getItemsCount()), item:getCount())
                        end
                    end
                end
            end
        end
    end
end)







local dropItems = { 3031 }
local maxStackedItems = 3

gpAntiPushDrop = macro(500, "Anti Push", function ()
  antiPush()
end)

onPlayerPositionChange(function()
    antiPush()
end)

function antiPush()
  if gpAntiPushDrop:isOff() then
    return
  end

  local tile = g_map.getTile(pos())
  if tile and tile:getThingCount() < maxStackedItems then
    local thing = tile:getTopThing()
    if thing and not thing:isNotMoveable() then
      for i, item in pairs(dropItems) do
        if item ~= thing:getId() then
            local dropItem = findItem(item)
            if dropItem then
              g_game.move(dropItem, pos(), 2)
            end
        end
      end
    end
  end
end
