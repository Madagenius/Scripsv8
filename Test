g_ui.loadUIFromString([[
menPanel < Panel
  margin: 2
  margin-bottom: 17
  layout:
    type: verticalBox

ConfigWindowDruid < MainWindow
  !text: tr( '- TEST -')
  font: terminus-10px
  color: green
  size: 200 220
  @onEscape: self:hide()

  TabBar
    id: spellsTabBar
    anchors.top: parent.top
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 2

  Panel
    id: spellsImagem
    anchors.top: spellsTabBar.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    anchors.bottom: parent.bottom
    image-border: 2

  Button
    id: closeButton
    !text: tr('Cerrar')
    font: cipsoftFont
    anchors.right: parent.right
    anchors.bottom: parent.bottom
    size: 49 21
    margin-top: 1
    margin-right: -5
    margin-bottom: -5
]])

local panelName = "configdruid"
if not storage[panelName] then
  storage[panelName] = {
    enabled = false,
  }
end

local config = storage[panelName]

rootWidget = g_ui.getRootWidget()
if rootWidget then
  configWindowDruid = UI.createWindow('ConfigWindowDruid', rootWidget)
  configWindowDruid:hide()
  local TabBarSpells = configWindowDruid.spellsTabBar
  TabBarSpells:setContentWidget(configWindowDruid.spellsImagem)

  -- Panel para macros Normales
  local normalPanel = g_ui.createWidget("menPanel")
  normalPanel:setId("panelNormal")
  TabBarSpells:addTab("PVP", normalPanel)

  UI.Separator(normalPanel)

  local listaMacros = {}

  -- DefiniciÃ³n de los macros
  local exevoGranMasFrigo = macro(2000, "Exori con", function()
      if g_game.isAttacking() then
          say("exori con")
      end
  end)

  local exevoGranMasTera = macro(2500, "Exori hur", function()
      if g_game.isAttacking() then
          say("exori hur")
          say("exori hur")
          say("exori hur")
      end
  end)

  local exoriFrigo = macro(1000, "Exori Frigo", function()
      if g_game.isAttacking() then
          say("exori frigo")
      end
  end)

  local exoriTera = macro(1000, "Exori flam", function()
      if g_game.isAttacking() then
          say("exori flam")
      end
  end)

  table.insert(listaMacros, exevoGranMasFrigo)
  table.insert(listaMacros, exevoGranMasTera)
  table.insert(listaMacros, exoriFrigo)
  table.insert(listaMacros, exoriTera)

  local checkboxes = {}

  for _, mac in ipairs(listaMacros) do
      local checkbox = g_ui.createWidget("CheckBox", normalPanel)
      checkbox:setText(mac.switch:getText())
      checkbox.onCheckChange = function(wid, isChecked)
          mac.setOn(isChecked and config.enabled)
      end
      checkbox:setChecked(mac.isOn())
      mac.switch:setVisible(false)
      table.insert(checkboxes, checkbox)
  end

  UI.Separator(normalPanel)

  configWindowDruid.closeButton.onClick = function(widget)
      configWindowDruid:hide()
  end

  -- Switch para habilitar/deshabilitar los macros
  UI.SwitchAndButton({on = config.enabled, left = "Habilitar", right = "Edit"}, function(widget)
      config.enabled = not config.enabled
      for i, mac in ipairs(listaMacros) do
          mac.setOn(config.enabled and checkboxes[i]:isChecked())
      end
  end, function()
      configWindowDruid:show()
      configWindowDruid:raise()
      configWindowDruid:focus()
  end)
end
